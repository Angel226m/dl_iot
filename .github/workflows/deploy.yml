name: Deploy CrackGuard to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to server
        run: |
          rsync -avz --delete \
            --exclude '.git' \
            --exclude 'node_modules' \
            --exclude '.env' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }}:/opt/crackguard/

      - name: Deploy with Docker Compose
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /opt/crackguard
            
            # Usar Docker Compose v2 (sin guion)
            docker compose down
            
            # Limpiar imágenes antiguas
            docker image prune -f
            
            # Construir y levantar servicios
            docker compose up -d --build
            
            # Verificar estado
            docker compose ps
            
            # Mostrar logs
            docker compose logs --tail=50
          EOF

      - name: Health Check
        run: |
          sleep 30
          curl -f https://crackguard.angelproyect.com/api/health || exit 1

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi